{{- if .Values.knativeDeploy }}
{{- else }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
{{- if .Values.annotations }}
  annotations:
{{ toYaml .Values.annotations | indent 8 }}
{{- end }}
  name: {{ template "name" . }}
  labels:
    draft: {{ default "draft-app" .Values.draft }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  selector:
    matchLabels:
      app: {{ template "name" . }}
  updateStrategy:
    type: {{ .Values.updateStrategy }}
{{- if .Values.service.name }}
  serviceName: {{ .Values.service.name }}-headless
{{- else }}
  serviceName: {{ template "name" . }}-headless
{{- end }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        draft: {{ default "draft-app" .Values.draft }}
        app: {{ template "name" . }}
{{- if .Values.podsLabels }}
{{ toYaml .Values.podsLabels | indent 6 }}
{{- end }}
{{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
    spec:
    {{- if .Values.service.antiAffinityKey }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: {{ .Values.service.antiAffinityKey }}
                operator: In
                values:
                - {{ .Values.service.antiAffinityValue }}
            topologyKey: "kubernetes.io/hostname"
    {{- end }}            
{{- if .Values.serviceAccount.enabled }}
{{- if .Values.serviceAccount.name }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
{{- else }}
      serviceAccountName: {{ template "name" . }}
{{- end }}
{{- if .Values.persistence }}
      securityContext:
        runAsUser:  {{ .Values.persistence.userId }}
        runAsGroup: {{ .Values.persistence.userId }}
        fsGroup: {{ .Values.persistence.userId }}
        fsGroupChangePolicy: "OnRootMismatch"
{{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: VERSION
          value: {{ .Chart.Version }}        
{{- range $pkey, $pval := .Values.env }}
        - name: {{ $pkey }}
          value: {{ quote $pval }}
{{- end }}
        envFrom:
{{ toYaml .Values.envFrom | indent 10 }}
{{- if .Values.service.configDir }}
        volumeMounts:
        - name: {{ template "name" . }}-config
          mountPath: {{ .Values.service.configDir }}/{{ .Values.service.configFile }}
          subPath: {{ .Values.service.configFile }}
{{- end }}
{{- if .Values.persistence }}
        - name: {{ template "name" . }}-data
          mountPath: "{{ .Values.service.dbDir }}"   
{{- end }}    
        ports:
        - name: node
          containerPort: {{ .Values.service.internalPort }}
        - name: prom
          containerPort: {{ .Values.service.promPort }}
        livenessProbe:
          tcpSocket:
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
        readinessProbe:
          tcpSocket:
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}  
        resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      - name: "{{ template "name" . }}-config"
        configMap:
          name: "{{ template "name" . }}-config-main"
      - name: "{{ template "name" . }}-data"
        persistentVolumeClaim:
          claimName: "{{ template "name" . }}-data"               
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      imagePullSecrets:
{{- range $pval := .Values.jx.imagePullSecrets }}
      - name: {{ quote $pval }}      
{{- end }}      
{{- end }}
{{- end }}